= Time Tracker plugin for Redmine

Time Tracker is a Redmine plugin to ease time tracking when working on an issue.
The plugin allows to start/suspend/resume/stop a timer on a per user basis.

This particular fork adds fixes to make Time Tracker work with the {Pepper}[https://github.com/ualibraries/redmine-pepper-theme] theme. Full credit for original version goes to Jérémie Delaitre.

There are various forks of this project around GitHub. For those moving from Redmine 1.x to 2.x, this one has the easiest migration plan.

== Features

* Current spent time always visible
* Timer automatic updated without reload
* Per user time tracking
* Using known 'log time' dialog

== Getting the plugin

The newest version is always at {GitHub}[http://github.com/ualibraries/redmine_time_tracker]. Check the GitHub network graph for other versions. 

== Install

1. Follow the Redmine plugin installation steps at: http://www.redmine.org/wiki/redmine/Plugins Make sure the plugin is installed to <tt>plugins/redmine_time_tracker</tt>
2. Setup the database using the migrations. <tt>rake db:migrate_plugins </tt> (use <tt>RAILS_ENV=production </tt>for production environment)
3. Login to your Redmine install as an Administrator
4. Setup the 'log time' permissions for your roles
5. Add "Time tracking" to the enabled modules for your project
6. The link to the plugin should appear in the 'account' menu bar

== Upgrade 

* If you are migrating from version 1.2 then we have to delete table records schema_migrations.
1. Run a selection in the database: <tt>select * from schema_migrations where version like '%time_tracker%';</tt>
2. Delete the records found: <tt>delete from schema_migrations where version like '%redmine_time_tracker-41627c4r%';</tt> or <tt>delete from schema_migrations where version like '%redmine_time_tracker%';</tt>
3. Copy the plug-in <tt><redmine_root>/plugins/</tt>
4. Run <tt>rake db:migrate_plugins RAILS_ENV=production</tt>

== Uninstall 

1. Run <tt>rake db:migrate:plugin NAME=redmine_time_tracker VERSION=0 RAILS_ENV=production</tt>
2. Delete folder <tt><redmine_root>/plugins/redmine_time_tracker</tt>

Note: if you receive the error "The rake task db:migrate:plugin has been deprecated, please use the replacement version redmine:plugins:migrate"
don't worry, the plugin's already uninstalled.

== Usage

To be able to use a time tracker, a user must have the 'log time' permission.
Then, the current time tracker information are displayed in the top right menu, next to the user
info.

These information are context dependant:
- If the user does not have a running time tracker yet, a message telling so will be displayed.
- If the user does not have a running time tracker yet but he is displaying an issue, then the
  'start' action will be displayed.
- If the user has a running time tracker, the current spent time is displayed (and refreshed
  periodically) next to the tracked issue number. The 'pause' or the 'resume' action will be
  displayed as well as the 'stop' one too. Stopping the time tracker will redirect the user to the
  standard time logging page with the 'hours' field filled with the time tracker value. This way, we
  rely on existing and well known behaviours.

To be noted that these actions are available in the issues list context menu too (right click in the
issues list).

A 'list' action is displayed in the menu too. This action will redirect the user to a page listing
his time tracker and other user's ones if the 'view others time trackers' right is set.
From this list, the user can 'delete' his time tracker (or the other user's ones if the 'delete
others time trackers' permission is set).

The plugin settings page allows to define the spent time refresh rate and the status transition to
apply when a time tracker is started.
For example, if a transition 'New' -> 'In progress' is added, starting a time tracker on an issue having
the 'New' status will automatically change it to 'In progress'.


=== Git

1. Open a shell to your Redmine's <tt>/plugins/redmine_time_tracker</tt> folder
2. Update your git copy with <tt>git pull</tt>
3. Update the database using the migrations. <tt>rake db:migrate_plugins RAILS_ENV=production</tt>
4. Restart your Redmine

